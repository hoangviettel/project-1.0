import { body } from 'express-validator';

const validationConfig = {
	'audit_logs': [
		body('log_id').notEmpty().withMessage('log_id is required').isInt().withMessage('log_id must be an integer'),
		body('table_name').optional(),
		body('action').optional(),
		body('record_id').optional(),
		body('staff_id').optional(),
		body('details').optional(),
		body('created_at').optional(),
	],
	'brands': [
		body('brand_id').notEmpty().withMessage('brand_id is required').isInt().withMessage('brand_id must be an integer'),
		body('brand_name').optional(),
		body('created_at').optional(),
	],
	'cart_items': [
		body('cart_item_id').notEmpty().withMessage('cart_item_id is required').isInt().withMessage('cart_item_id must be an integer'),
		body('cart_id').optional(),
		body('product_id').optional(),
		body('quantity').optional(),
	],
	'carts': [
		body('cart_id').notEmpty().withMessage('cart_id is required').isInt().withMessage('cart_id must be an integer'),
		body('customer_id').optional(),
		body('created_at').optional(),
		body('updated_at').optional(),
	],
	'categories': [
		body('category_id').notEmpty().withMessage('category_id is required').isInt().withMessage('category_id must be an integer'),
		body('category_name').optional(),
		body('description').optional(),
		body('created_at').optional(),
	],
	'customers': [
		body('customer_id').notEmpty().withMessage('customer_id is required').isInt().withMessage('customer_id must be an integer'),
		body('username').optional(),
		body('email').optional(),
		body('password_hash').optional(),
		body('full_name').optional(),
		body('birth_date').optional(),
		body('gender').optional(),
		body('phone').optional(),
		body('address').optional(),
		body('created_at').optional(),
		body('updated_at').optional(),
	],
	'import_invoice_details': [
		body('detail_id').notEmpty().withMessage('detail_id is required').isInt().withMessage('detail_id must be an integer'),
		body('invoice_id').optional(),
		body('product_id').optional(),
		body('quantity').optional(),
		body('price').optional(),
	],
	'import_invoices': [
		body('invoice_id').notEmpty().withMessage('invoice_id is required').isInt().withMessage('invoice_id must be an integer'),
		body('supplier_id').optional(),
		body('staff_id').optional(),
		body('total_amount').optional(),
		body('invoice_date').optional(),
		body('warehouse_id').optional(),
		body('created_at').optional(),
	],
	'inventory': [
		body('inventory_id').notEmpty().withMessage('inventory_id is required').isInt().withMessage('inventory_id must be an integer'),
		body('product_id').optional(),
		body('warehouse_id').optional(),
		body('stock').optional(),
		body('last_updated').optional(),
	],
	'order_details': [
		body('detail_id').notEmpty().withMessage('detail_id is required').isInt().withMessage('detail_id must be an integer'),
		body('order_id').optional(),
		body('product_id').optional(),
		body('quantity').optional(),
		body('price').optional(),
		body('warehouse_id').optional(),
	],
	'order_promotions': [
		body('order_promotion_id').notEmpty().withMessage('order_promotion_id is required').isInt().withMessage('order_promotion_id must be an integer'),
		body('order_id').optional(),
		body('promotion_id').optional(),
		body('applied_discount').optional(),
	],
	'orders': [
		body('order_id').notEmpty().withMessage('order_id is required').isInt().withMessage('order_id must be an integer'),
		body('customer_id').optional(),
		body('staff_id').optional(),
		body('total_amount').optional(),
		body('order_status').optional(),
		body('shipping_method_id').optional(),
		body('shipping_address').optional(),
		body('method_id').optional(),
		body('payment_status').optional(),
		body('created_at').optional(),
		body('updated_at').optional(),
	],
	'payment_methods': [
		body('method_id').notEmpty().withMessage('method_id is required').isInt().withMessage('method_id must be an integer'),
		body('method_name').optional(),
		body('description').optional(),
		body('is_active').optional(),
		body('created_at').optional(),
	],
	'product_images': [
		body('image_id').notEmpty().withMessage('image_id is required').isInt().withMessage('image_id must be an integer'),
		body('product_id').optional(),
		body('image_url').optional(),
		body('is_primary').optional(),
		body('created_at').optional(),
	],
	'products': [
		body('product_id').notEmpty().withMessage('product_id is required').isInt().withMessage('product_id must be an integer'),
		body('product_name').optional(),
		body('brand_id').optional(),
		body('category_id').optional(),
		body('price').optional(),
		body('discount_price').optional(),
		body('description').optional(),
		body('specifications').optional(),
		body('created_at').optional(),
		body('updated_at').optional(),
	],
	'promotions': [
		body('promotion_id').notEmpty().withMessage('promotion_id is required').isInt().withMessage('promotion_id must be an integer'),
		body('promotion_code').optional(),
		body('description').optional(),
		body('discount_type').optional(),
		body('discount_value').optional(),
		body('min_order_value').optional(),
		body('start_date').optional(),
		body('end_date').optional(),
		body('is_active').optional(),
		body('created_at').optional(),
		body('updated_at').optional(),
	],
	'refresh_tokens': [
		body('user_id').notEmpty().withMessage('user_id is required').isInt().withMessage('user_id must be an integer'),
		body('token').optional(),
	],
	'reviews': [
		body('review_id').notEmpty().withMessage('review_id is required').isInt().withMessage('review_id must be an integer'),
		body('customer_id').optional(),
		body('product_id').optional(),
		body('rating').optional(),
		body('comment').optional(),
		body('created_at').optional(),
	],
	'shipping_methods': [
		body('shipping_method_id').notEmpty().withMessage('shipping_method_id is required').isInt().withMessage('shipping_method_id must be an integer'),
		body('method_name').optional(),
		body('cost').optional(),
		body('estimated_delivery_time').optional(),
		body('is_active').optional(),
		body('created_at').optional(),
	],
	'suppliers': [
		body('supplier_id').notEmpty().withMessage('supplier_id is required').isInt().withMessage('supplier_id must be an integer'),
		body('supplier_name').optional(),
		body('contact_name').optional(),
		body('phone').optional(),
		body('email').optional(),
		body('address').optional(),
		body('created_at').optional(),
	],
	'transactions': [
		body('transaction_id').notEmpty().withMessage('transaction_id is required').isInt().withMessage('transaction_id must be an integer'),
		body('order_id').optional(),
		body('method_id').optional(),
		body('amount').optional(),
		body('transaction_status').optional(),
		body('transaction_date').optional(),
		body('transaction_code').optional(),
	],
	'users': [
		body('account_id').notEmpty().withMessage('account_id is required').isInt().withMessage('account_id must be an integer'),
		body('username').optional(),
		body('email').optional(),
		body('password_hash').optional(),
		body('full_name').optional(),
		body('birth_date').optional(),
		body('gender').optional(),
		body('phone').optional(),
		body('address').optional(),
		body('role').optional(),
		body('created_at').optional(),
		body('updated_at').optional(),
	],
	'warehouses': [
		body('warehouse_id').notEmpty().withMessage('warehouse_id is required').isInt().withMessage('warehouse_id must be an integer'),
		body('warehouse_name').optional(),
		body('location').optional(),
		body('created_at').optional(),
	],
};
export default validationConfig;
